<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label7.Text" xml:space="preserve">
    <value>Antes do início, atraso</value>
  </data>
  <data name="btnScanSpeed.Text" xml:space="preserve">
    <value>Inicia escaneamento</value>
  </data>
  <data name="btnScanTool.Text" xml:space="preserve">
    <value>Inicia escaneamento</value>
  </data>
  <data name="btnScanPower.Text" xml:space="preserve">
    <value>Inicia escaneamento</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>na taxa de alimentação F</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Z de mais para menos</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Alinhamento a laser</value>
  </data>
  <data name="lblToolProp.Text" xml:space="preserve">
    <value>Alimentação XY (F) e l potência (S) de tt</value>
  </data>
  <data name="lblText.Text" xml:space="preserve">
    <value>Configuração: defina $ 30 para um valor que resulte em 100% de potência do laser ao configurar o S100.</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>para F</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Mova X de 0 para</value>
  </data>
  <data name="btnScanZ.Text" xml:space="preserve">
    <value>Inicia escaneamento</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>seg. em S</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>na potência do laser S</value>
  </data>
  <data name="btnToolUpdate.Text" xml:space="preserve">
    <value>Atualizar tabela de ferramentas</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>para S</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Movimento durante a digitalização</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Digitalize Z para encontrar o foco em velocidade e potência constantes</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>degrau</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>De S</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Digitalize a potência do laser em velocidade constante (sem eixo Z)</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>De F</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Digitalize a velocidade X com potência constante (sem eixo Z)</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>Use valores da tabela de ferramentas</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>na potência do laser S</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Configurações de laser para usar abaixo</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>mova Y por</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>na taxa de alimentação F</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>degrau</value>
  </data>
  <data name="TbPatternHeadline.Text" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="TbPatternHeadline.ToolTip" xml:space="preserve">
    <value>Título acima do padrão de teste</value>
  </data>
  <data name="CbPatternLabelFirst.Text" xml:space="preserve">
    <value>Escreva os rótulos primeiro</value>
  </data>
  <data name="CbPatternLabelFirst.ToolTip" xml:space="preserve">
    <value>Se ativado, os rótulos serão gravados antes das áreas de teste</value>
  </data>
  <data name="label28.Text" xml:space="preserve">
    <value>Velocidade</value>
  </data>
  <data name="NudPatternLabelSpeed.ToolTip" xml:space="preserve">
    <value>Taxa de avanço para gravar as etiquetas</value>
  </data>
  <data name="NudPatternLabelPower.ToolTip" xml:space="preserve">
    <value>Potência laser para gravar as etiquetas</value>
  </data>
  <data name="label27.Text" xml:space="preserve">
    <value>Potência laser</value>
  </data>
  <data name="groupBox10.Text" xml:space="preserve">
    <value>Gravação de etiqueta</value>
  </data>
  <data name="groupBox9.Text" xml:space="preserve">
    <value>Área de teste/retângulo</value>
  </data>
  <data name="groupBox8.Text" xml:space="preserve">
    <value>Velocidade / Avanço no eixo Y</value>
  </data>
  <data name="groupBox7.Text" xml:space="preserve">
    <value>Potência do laser no eixo X</value>
  </data>
  <data name="BtnMaterialTest.Text" xml:space="preserve">
    <value>Criar padrão de teste</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Padrão de teste de material</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Alinhamento a laser</value>
  </data>
  <data name="BtnMaterialSingleTest.Text" xml:space="preserve">
    <value>Criar teste único</value>
  </data>
  <data name="BtnMaterialSingleTest.ToolTip" xml:space="preserve">
    <value>Crie uma área de teste única usando potência mínima do laser e taxa de avanço máxima</value>
  </data>
  <data name="NudPatternGap.ToolTip" xml:space="preserve">
    <value>Distância entre áreas de teste</value>
  </data>
  <data name="NudPatternYSize.ToolTip" xml:space="preserve">
    <value>Altura da área de teste</value>
  </data>
  <data name="label26.Text" xml:space="preserve">
    <value>Brecha</value>
  </data>
  <data name="NudPatternInterval.ToolTip" xml:space="preserve">
    <value>Distância entre linhas para preencher a área de teste</value>
  </data>
  <data name="label25.Text" xml:space="preserve">
    <value>Distância/intervalo da linha</value>
  </data>
  <data name="label24.Text" xml:space="preserve">
    <value>Tamanho Y</value>
  </data>
  <data name="NudPatternXSize.ToolTip" xml:space="preserve">
    <value>Largura da área de teste</value>
  </data>
  <data name="label23.Text" xml:space="preserve">
    <value>Tamanho X</value>
  </data>
  <data name="CbPatternYLabel.Text" xml:space="preserve">
    <value>Mostrar rótulo</value>
  </data>
  <data name="CbPatternYLabel.ToolTip" xml:space="preserve">
    <value>Mostra as taxas de avanço aplicadas à esquerda das áreas de teste</value>
  </data>
  <data name="NudPatternYMax.ToolTip" xml:space="preserve">
    <value>A taxa de avanço máxima será aplicada primeiro (parte inferior)</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Máx.</value>
  </data>
  <data name="NudPatternYMin.ToolTip" xml:space="preserve">
    <value>A taxa de avanço mínima será aplicada por último (superior)</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>Min.</value>
  </data>
  <data name="NudPatternYNumber.ToolTip" xml:space="preserve">
    <value>Número de campos de teste para o avanço na vertical (eixo y)</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>Número</value>
  </data>
  <data name="CbPatternXLabel.Text" xml:space="preserve">
    <value>Mostrar rótulo</value>
  </data>
  <data name="CbPatternXLabel.ToolTip" xml:space="preserve">
    <value>Mostra as potências do laser aplicadas abaixo das áreas de teste</value>
  </data>
  <data name="NudPatternXMax.ToolTip" xml:space="preserve">
    <value>Potência do laser para parar (extrema direita)</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>Máx. %</value>
  </data>
  <data name="NudPatternXMin.ToolTip" xml:space="preserve">
    <value>Potência do laser para começar (extrema esquerda)</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>Min. %</value>
  </data>
  <data name="NudPatternXNumber.ToolTip" xml:space="preserve">
    <value>Número de campos de teste para a energia do laser na horizontal (eixo x)</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Número</value>
  </data>
</root>